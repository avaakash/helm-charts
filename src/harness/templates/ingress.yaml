{{- if .Values.global.ingress.enabled -}}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ng-manager
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.global.ingress.nginx.objects.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: ng-manager
                port:
                  number: 7090
             path: /{{  .Values.global.ingress.envpath }}ng/api(/|$)(.*)
            pathType: ImplementationSpecific
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sto-core
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.global.ingress.nginx.objects.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: sto-core
                port:
                  number: 4000
             path: /{{  .Values.global.ingress.envpath }}sto/(.*)
            pathType: ImplementationSpecific
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sto-manager
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.global.ingress.nginx.objects.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: sto-manager
                port:
                  number: 7090
             path: /{{  .Values.global.ingress.envpath }}sto-manager/(.*)
            pathType: ImplementationSpecific
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: et-collector
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.global.ingress.nginx.objects.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: et-collector
                port:
                  number: 6070
             path: /{{  .Values.global.ingress.envpath }}et-collector(/|$)(.*)
            pathType: ImplementationSpecific
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: et-service
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.global.ingress.nginx.objects.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: et-service
                port:
                  number: 9191
             path: /{{  .Values.global.ingress.envpath }}et(/|$)(.*)
            pathType: ImplementationSpecific
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: next-gen-ui
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.global.ingress.nginx.objects.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: next-gen-ui
                port:
                  number: 80
             path: /{{  .Values.global.ingress.envpath }}ng(/|$)(.*)
            pathType: ImplementationSpecific
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ci-manager
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.global.ingress.nginx.objects.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: ci-manager
                port:
                  number: 7090
             path: /{{  .Values.global.ingress.envpath }}ci(/|$)(.*)
            pathType: ImplementationSpecific
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cv-nextgen
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.global.ingress.nginx.objects.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /cv/api/$2
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: cv-nextgen
                port:
                  number: 6060
             path: /{{  .Values.global.ingress.envpath }}cv/api(/|$)(.*)
            pathType: ImplementationSpecific
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-ui
  namespace: {{ .Release.Namespace }}
  {{- if .Values.global.ingress.nginx.objects.annotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: minio
                port:
                  number: 9000
             path: /{{  .Values.global.ingress.envpath }}minio
            pathType: Prefix
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: logs-service-minio
  namespace: {{ .Release.Namespace }}
  {{- if .Values.global.ingress.nginx.objects.annotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: minio
                port:
                  number: 9000
             path: /{{  .Values.global.ingress.envpath }}logs/
            pathType: ImplementationSpecific
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: log-service
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.global.ingress.nginx.objects.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: log-service
                port:
                  number: 8079
             path: /{{  .Values.global.ingress.envpath }}log-service(/|$)(.*)
            pathType: ImplementationSpecific
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gateway
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.global.ingress.nginx.objects.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: gateway
                port:
                  number: 80
             path: /{{  .Values.global.ingress.envpath }}gateway(/|$)(.*)
            pathType: ImplementationSpecific
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: access-control
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.global.ingress.nginx.objects.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: access-control
                port:
                  number: 9006
             path: /{{  .Values.global.ingress.envpath }}authz(/|$)(.*)
            pathType: ImplementationSpecific
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ti-service
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.global.ingress.nginx.objects.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: ti-service
                port:
                  number: 8078
             path: /{{  .Values.global.ingress.envpath }}ti-service(/|$)(.*)
            pathType: ImplementationSpecific
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: template-service
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.global.ingress.nginx.objects.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: template-service
                port:
                  number: 15002
             path: /{{  .Values.global.ingress.envpath }}template(/|$)(.*)
            pathType: ImplementationSpecific
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: delegate-proxy
  namespace: {{ .Release.Namespace }}
  {{- if .Values.global.ingress.nginx.objects.annotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: delegate-proxy
                port:
                  number: 80
             path: /{{  .Values.global.ingress.envpath }}storage
            pathType: Prefix
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pipeline-service
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.global.ingress.nginx.objects.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: pipeline-service
                port:
                  number: 12001
             path: /{{  .Values.global.ingress.envpath }}pipeline(/|$)(.*)
            pathType: ImplementationSpecific
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: notification-service
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.global.ingress.nginx.objects.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: platform-service
                port:
                  number: 9005
             path: /{{  .Values.global.ingress.envpath }}notifications(/|$)(.*)
            pathType: ImplementationSpecific
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: audit-service
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.global.ingress.nginx.objects.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: platform-service
                port:
                  number: 9005
             path: /{{  .Values.global.ingress.envpath }}audit(/|$)(.*)
            pathType: ImplementationSpecific
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: resourcegroup-service
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.global.ingress.nginx.objects.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: platform-service
                port:
                  number: 9005
             path: /{{  .Values.global.ingress.envpath }}resourcegroup(/|$)(.*)
            pathType: ImplementationSpecific
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: verification-service
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.global.ingress.nginx.objects.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: verification-svc
                port:
                  number: 7070
             path: /{{  .Values.global.ingress.envpath }}verification
            pathType: Prefix
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: harness-manager-api
  namespace: {{ .Release.Namespace }}
  {{- if .Values.global.ingress.nginx.objects.annotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: harness-manager
                port:
                  number: 9090
             path: /{{  .Values.global.ingress.envpath }}api
            pathType: Prefix
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: harness-manager-stream
  namespace: {{ .Release.Namespace }}
  {{- if .Values.global.ingress.nginx.objects.annotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: harness-manager
                port:
                  number: 9090
             path: /{{  .Values.global.ingress.envpath }}stream
            pathType: Prefix
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ng-auth-ui
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.global.ingress.nginx.objects.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: ng-auth-ui
                port:
                  number: 80
             path: /{{  .Values.global.ingress.envpath }}auth(.*)
            pathType: ImplementationSpecific
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}
{{- if not .Values.global.cg.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: harness-ui
  namespace: {{ .Release.Namespace }}
  {{- if .Values.global.ingress.nginx.objects.annotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.global.ingress.nginx.objects.annotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  ingressClassName: {{ .Values.global.ingress.className | quote }}
  rules:
    {{- range .Values.global.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - backend:
              service:
                name: next-gen-ui
                port:
                  number: 80
             path: /{{  .Values.global.ingress.envpath }}
            pathType: Prefix
    {{- end }}
  {{- if .Values.global.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.global.ingress.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.global.ingress.tls.secretName }}
  {{- end }}
{{- end }}
{{- end }}
